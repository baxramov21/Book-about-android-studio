<resources>
    <string name="app_name">Project Karina</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello this is main screen</string>
    <string name="email">Email</string>
    <string name="password">Password</string>
    <string name="sign_up">Sign Up</string>
    <string name="login_tv">Already have account ? Login</string>
    <string name="login">Login</string>
    <string name="signup_tv">Don\'t have account yet ? Sign up</string>
    <string name="fill_fields">Fields must not be  empty</string>
    <string name="login_success">Successfully signed in account</string>
    <string name="auth_failed">Authentication failed. Try again</string>
    <string name="signup_succes">Account successfully created</string>
    <string name="sign_in">SIGN IN</string>
    <string name="sign_up_2">SIGN UP</string>
    <string name="sign_out">Sign out</string>
    <string name="delete_account">Delete account</string>
    <string name="successfully_deleted">Account successfully deleted</string>

    <string name="first_part_data">
        Это IDE, созданная компанией Google для разработки приложений под операционную систему Android.
        IDE – это набор инструментов для программиста, помогающих ему «написать» логику поведения программы,
        добавить в нее визуальные элементы, сделать их интерактивными и превратить задумку в полноценный продукт,
        который можно выставить на продажу в Google Play.
        Android Studio создана специально для взаимодействия с такими языками программирования, как Java и Kotlin.
        Поэтому начинающий разработчик, решивший познакомиться с инструментами Android Studio,
        должен уже обладать навыками в одном из двух перечисленных выше языков и знать основы разработки приложений для ОС Google.
        И хотя AS не напишет за вас хит, способный выбиться в топ-10 загружаемых программ, эта утилита может заметно
        сократить головную боль и автоматизировать колоссальное количество работы, ложащейся на плечи разработчиков.
        Например, поиск ошибок и даже их исправление. И да, иногда AS будет писать код за вас, и вам это понравится.

    </string>

    <string name="second_part_data1">
       Начать стоит с загрузки клиента AS и его установки на компьютер. Для этого Google подготовила
        целую кипу установщиков всех сортов. Они доступны на официальном сайте утилиты. Зайдите туда
        и нажмите кнопку «Download Android Studio». Сайт предложит подходящий дистрибутив, который можно
        установить классическим двойным кликом.
    </string>

    <string name="second_part_data2">
       Запускаем скачанный файл и следуем инструкциям на экране. Ставим галочки на всех пунктах,
        чтобы вместе с IDE загрузились вспомогательные компоненты (без них не получится создать программу,
        способную работать на настоящем смартфоне).
В остальном процедура заключается в многократном нажатии на кнопку «Далее».
Для Linux и macOS есть опция установки Android Studio с помощью командной строки, используя менеджеры пакетов apt, dnf и brew.
Также стоит иметь в виду, что для работы с Android Studio на ПК должен быть установлен Java.

    </string>

    <string name="third_part_data1">
       После установки включаем Android Studio и видим перед собой окно с надписью New Project.
        IDE предлагает нам создать новую программу. Если такое окно не появилось, то открываем New Project
        вручную, кликнув сначала по кнопке File в верхнем левом углу, а потом на New Project.
Для создания проекта нужно указать его название, а также домен своей компании (если таковой имеется, конечно).
        Здесь же можно указать другой путь для хранения проекта, но это необязательно.

    </string>

    <string name="third_part_data2">
      После нажатия на Next перед вами появится целый список шаблонов для будущей программы.
        Можно выбрать целое приложение, можно отдельное окно или функцию (доступ к геолокации,
        форму для входа в учетную запись, боковое меню и т.п.).
Если надо создать приложение с нуля без конкретики, то стоит выбрать Basic Activity. В нем будет одна
        кнопка, панель управления и текстовое поле, где можно разместить любой контент на свое усмотрение.
Независимо от выбранного шаблона, впоследствии вы сможете добавлять любые виды контента и окон, как только они понадобятся.

    </string>

    <string name="fourth_part_data1">
        Основное окно делится на 4 основных блока:
        1.	Palette – это все окна, которые уже есть в вашем приложении. По мере разработки их количество будет увеличиваться.
        2.	Component Tree – здесь будут все компоненты, даже если они не относятся к конкретному окну.
        3.	Design Editor – главное окно с выбранным окном приложения или редактором кода.
        4.	Attributes Panel, или «Инспектор». Набор настроек, относящихся к элементу, с которым вы работаете в текущий момент.
    </string>

    <string name="fourth_part_data2">
        В верхнем правом углу вы можете обнаружить кнопку деления экрана на части. Чтобы, к примеру,
        в Design Editor одновременно отображался и внешний вид программы, и код, «скрытый» под ним.
    </string>

    <string name="fifth_part_data">
        Разработка комплексных приложений не укладывается в рамки одного скрипта и одного файла разметки,
        как это принято, например, в базовой веб-разработке. Хотя логика тут схожая. 
        Вас встретит документ под названием ИмяПриложения.java Это что-то в духе основы для программы.
        Как index.html при разработке веб-сайта, но не для всей разметки, а для подключения других компонентов и управления ими.
        Разметка находится в файле имя_приложения.xml. Это уже ближе к HTML-файлу в том смысле, что
        здесь вы «расписываете» компилятору, как будет выглядеть ваша программа и где будут находиться кнопки,
        аватарки, текстовые поля и прочие элементы.
        На базовом уровне визуальная часть будет описана в XML-документе, а «логическая» – в java-скрипте.
        Количество файлов неограничено, каждый элемент интерфейса можно описать в отдельном документе.
        Такая практика упрощает дальнейшую разработку и делает код более читаемым.

    </string>

    <string name="sixth_part_data1">
        Есть еще несколько директорий, с которыми стоит ознакомиться чуть ли не после первого включения Android Studio:
•	res – это сокращение от resources. Тут будут лежать дополнительные файлы, необходимые вашей программе,
        например картинки, используемые вместо стандартных иконок интерфейса, или просто изображения, задействованные в работе ПО.
•	layout – тут лежат все XML-документы с разметкой для разных компонентов приложения.
•	values – а тут находятся значения свойств. Например, здесь можно хранить переменные с названиями
        цветов вместо их кодов, чтобы потом было проще добавлять их в разные куски интерфейса программы,
        потому что buttonColor несет куда больше смысла, чем #f34e980.
А еще нужно изучить файл manifest. Он содержит критически важную информацию о вашем детище: какие компоненты
        будут в него включены, имя программы, которое увидят пользователи и т.п.
Сборщик приложения – Gradle
Как вы могли догадаться, приложение не поступает в Google Play в таком разрозненном виде. Обилие файлов Android Studio
        нужно упаковать во что-то удобоваримое и запускаемое на смартфонах.
    </string>

    <string name="sixth_part_data2">
        Для этого в AS разработчики Google предусмотрели утилиту Gradle. Она работает как сборщик
        разных частей приложения и собирает их в единый пакет, который потом можно скачать из интернета и установить на Android-устройство.
Вам нужно знать о Gradle то, что у него есть конфигурационный файл build.gradle. В нем нужно
        указать зависимости проекта (если вы используете сторонние программные библиотеки для
        добавления продвинутых функций в вашу программу, недоступных в AS по умолчанию).
Запустить Gradle можно следующим образом:
•	Кликаем по меню Build в верхней части окна.
•	Выбираем свой проект и ждем.
    </string>

    <string name="seventh_part_data1">
        Представим, что ваше приложение готово. Вы дописали код и довольны внедренной в утилиту функциональностью.
        Теперь надо провести тестирование и выявить недочеты в коде. Это можно сделать двумя способами:
        запустив программу в эмуляторе Андроида прямо в Android Studio или на «живом» устройстве, если такой есть под рукой.
Чтобы запустить написанный вами код на реальном устройстве:
•	Подключаем гаджет к компьютеру с помощью USB-кабеля (в режиме дебаггинга).
•	Потом нажимаем на кнопку Run в верхней панели управления интерфейсом.
•	После этого выбираем пункт Run App.
Graddle быстро создаст сборку программы и запустит ее в тестовом режиме. В этом режиме вся информация о работе
        программы записывается в журнал событий, отображающийся во вкладке logcat. Если что-то пойдет не так,
        прочитать о случившемся можно будет именно там. А еще полезная информация о работе с программой
        (нагрузка на процессор, энергопотребление) отображается во вкладке Monitor.
    </string>

    <string name="seventh_part_data2">
        AVD, Android Virtual Devices – это система эмуляции Android-устройств с различными характеристиками.
        Она нужна на тот случай, если у вас нет подходящего телефона или планшета. Также не стоит забывать о
        сумасшедшей фрагментации мира Андроидов, а ведь это сотни различных чипов, разрешений и дизайнов.
        Нельзя скупить тысячи устройств и на всех протестировать ПО. Но AVD-менеджер эту задачу упрощает.
    </string>

    <string name="seventh_part_data3">
        Чтобы включить AVD-менеджер:
•	Открываем меню Tools в верхней части окна Android Studio.
•	В выпавшем списке опций выбираем Android.
•	А потом AVD Manager.
•	Выбираем тип оборудования, размер экрана и другие параметры виртуального гаджета.
Виртуальный гаджет появится в списке устройств для дебаггинга среди настоящих телефонов и планшетов, ранее использовавшихся для отладки программ.

    </string>

    <string name="eighth_part_data">
        AVD, Android Virtual Devices – это система эмуляции Android-устройств с различными характеристиками.
        Она нужна на тот случай, если у вас нет подходящего телефона или планшета. Также не стоит забывать о
        сумасшедшей фрагментации мира Андроидов, а ведь это сотни различных чипов, разрешений и дизайнов.
        Нельзя скупить тысячи устройств и на всех протестировать ПО. Но AVD-менеджер эту задачу упрощает.
        Чтобы сделать такой пакет:
       •	Открываем вкладку Build, расположенную в панели инструментов.
       •	Выбираем опцию Generate Signed APK.
        Gradle соберет для вас подходящий APK, готовый к публикации в Google Play.
    </string>
Android
    <string name="seventh_part_title1">Деббагинг на реальном устройстве</string>
    <string name="eighth_part_title">Упаковка приложения в подписанный APK-пакет</string>
    <string name="first_part_title">Что такое Android Studio?</string>
    <string name="second_part_title">Устанавливаем и настраиваем Android Studio</string>
    <string name="third_part_title">Создаем свой первый проект</string>
    <string name="fourth_part_title">Структура интерфейса Android Studio</string>
    <string name="fifth_part_title">Что за куча файлов вокруг?</string>
    <string name="sixth_part_title">Типы файлов. Зачем их так много?</string>
    <string name="part1">Глава 1</string>
    <string name="part2">Глава 2</string>
    <string name="part3">Глава 3</string>
    <string name="part4">Глава 4</string>
    <string name="part5">Глава 5</string>
    <string name="part6">Глава 6</string>
    <string name="part7">Глава 7</string>
    <string name="part8">Глава 8</string>
    <string name="open">Open</string>
    <string name="close">Close</string>
    <string name="welcome">Добро пожаловать</string>
    <string name="learn_programming">Начни изучить современные профессии уже сейчас</string>
    <string name="e_book">Электронный учебник по Android разработке</string>
    <string name="start">Начать</string>
    <string name="search_hint">Search something</string>
    <string name="search">Search</string>

</resources>